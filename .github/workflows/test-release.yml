name: Test Release

on:
  release:
    types:
      - published
      - unpublished
      - created
      - edited
      - deleted
      - prereleased
      - released
      
jobs:
  one:
    runs-on: ubuntu-latest
    steps:
      - name: Get download link
        run: echo ${{ github.event.release.assets[0].browser_download_url }}
        
      - name: Get download link
        env:
          GITHUB_CONTEXT: ${{ github.event.release.assets[0].browser_download_url }}
        run: curl -o mydir.zip "$GITHUB_CONTEXT"
      
      - name: ls
        run: ls -la
      
      - name: unzip
        run: unzip -lv mydir.zip
      
      - name: list
        run: ls -la
      
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
  
  # This workflow contains a single job called "build"
  say-hello:
   # The type of runner that the job will run on
   runs-on: windows-2019
   # Steps represent a sequence of tasks that will be executed as part of the job
   steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     
     - uses: actions/checkout@v2
     
     - name: Time To Say Hello 
       run: |
         echo ${{ github.event_name }}
         echo ${{ github.event.action }}
         echo ${{ github.event.release.name }}
         echo ${{ github.event.release.tag_name }}
         echo ${{ github.event.release.draft }}
